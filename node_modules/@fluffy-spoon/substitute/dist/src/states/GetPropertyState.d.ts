import { ContextState, PropertyKey } from './ContextState';
import { Context } from '../Context';
export declare class GetPropertyState implements ContextState {
    private _property;
    private _mocks;
    private _recordedCalls;
    private _isFunctionState;
    private _lastArgs?;
    get property(): PropertyKey;
    get isFunctionState(): boolean;
    get callCount(): number;
    constructor(_property: PropertyKey);
    private getCallCount;
    private applySubstituteMethodLogic;
    private processProperty;
    apply(context: Context, args: any[]): any;
    set(context: Context, property: PropertyKey, value: any): void;
    private isSubstituteMethod;
    private sanitizeSubstituteMockInputs;
    get(context: Context, property: PropertyKey): any;
}
