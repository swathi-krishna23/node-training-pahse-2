"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetPropertyState = void 0;
const Utilities_1 = require("../Utilities");
const SubstituteBase_1 = require("../SubstituteBase");
class SetPropertyState {
    constructor(_property, ...args) {
        this._property = _property;
        this._arguments = args;
        this._callCount = 0;
    }
    get arguments() {
        return this._arguments;
    }
    get property() {
        return this._property;
    }
    get callCount() {
        return this._callCount;
    }
    apply(context) {
        throw SubstituteBase_1.SubstituteException.generic('Calling apply of setPropertyState is not normal behaviour, something went wrong');
    }
    set(context, property, value) {
        let callCount = this._callCount;
        const hasExpectations = context.initialState.hasExpectations;
        if (hasExpectations) {
            callCount = context.initialState
                .setPropertyStates
                .filter(x => Utilities_1.areArgumentsEqual(x.arguments[0], value))
                .map(x => x._callCount)
                .reduce((a, b) => a + b, 0);
        }
        context.initialState.assertCallCountMatchesExpectations([[]], callCount, Utilities_1.PropertyType.property, this.property, this.arguments);
        if (!hasExpectations) {
            this._callCount++;
        }
    }
    get(context, property) {
        throw SubstituteBase_1.SubstituteException.generic('Calling get of setPropertyState is not normal behaviour, something went wrong');
    }
}
exports.SetPropertyState = SetPropertyState;
